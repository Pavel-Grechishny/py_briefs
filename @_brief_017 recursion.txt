========================================================================

00:56 - рекурсия - циклический процесс (функция - вызывает сама себя)

    recursion1.py
    -------------
    
    >>> def recur_func(n: int):
    ...     if n > 0:
    ...             print(f'рекурсивный вызов: {n=}')
    ...             return recur_func(n-1)
    ...     else:
    ...             print(f'последний рекурсивный вызов: {n=}')
    ...             return n
    ...
    
    >>> recur_func(5)
    рекурсивный вызов: n=5
    рекурсивный вызов: n=4
    рекурсивный вызов: n=3
    рекурсивный вызов: n=2
    рекурсивный вызов: n=1
    последний рекурсивный вызов: n=0
    0
    
    >>> recur_func(7)
    рекурсивный вызов: n=7
    рекурсивный вызов: n=6
    рекурсивный вызов: n=5
    рекурсивный вызов: n=4
    рекурсивный вызов: n=3
    рекурсивный вызов: n=2
    рекурсивный вызов: n=1
    последний рекурсивный вызов: n=0
    0
    
  ! Глубина рекурсии (стек вызовов) - 996 лимит
  
    recursion2.py
    -------------
    Нохождение НОД
    
    recursion3.py
    -------------
    Создание списка с данными из структуры содержащей различные типы данных и произвольной вложенности