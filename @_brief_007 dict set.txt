==========================================================================================

00_01 - основы словарей и множеств (dict + set)

    такие типы назвают отображением, т.к. они хранят пары объектов (ключ, значение)
    
    литерал словаря выглядит так: alphabet = {'a': 1, 'b': 2, 'c': 3}
    
    print(type(alphabet)) - класс - class 'dict'
    print(alphabet) - строковое представление - {'a': 1, 'b': 2, 'c': 3} - такое же как и литерал
    print(len(alphabet)) - размер - 3 (количество элементов)
    
00_10 - словарные методы

    получение ключений:
    
    alphabet.keys() - dict_keys(['a', 'b', 'c']) - class 'dict_keys'
    
    получение значений:
    
    alphabet.values() - dict_values([1, 2, 3]) - class 'dict_values'
    
    получение элеентов:
    
    alphabet.items() - dict_items([('a', 1), ('b', 2), ('c', 3)]) - class 'dict_items'
    
00_15 - особенности ключей и значений

    Значением - может быть абсолютно любой объект
    
    Ключем - может быть не любой объект (2 ограничения)
        1 - все ключи должны быть уникальны
        2 - могут быть только хешируемые (*неизеняемые) объекты
        
        * изменеяемые - не хешируемые
        
00_27 - словарь с месяцами

    days = {1:31, 2:28, 3:31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}
    
    обращение к значению по ключу:
    print(days[2]) - 28
    
    month_day = {
        'янв':31,
        'фев':28,
        'мар':31,
        'апр':30,
        'май':31,
        'июн':30,
        'июл':31,
        'авг':31,
        'сен':30,
        'окт':31,
        'ноя':30,
        'дек':31
    }
        
    print(month_day['дек']) - 31
    
  ! обращение по несуществующему ключу выбросит исключение - KeyError
  
00_39 - Словари могут содержать ключи разных типов

  ! Для int и float ключей принимаются одинаковые хеши (1 и 1.0 ключей быть не может)
  
00_50 - Изменение словарей

    numbers[2] = newObj - добавление по новому еще не существующему ключу (либо замена по существующему)
    
    numbers.pop[key] - рекомендованыый метод удаления элемента из словаря по ключу 
        pop - возвращает ЗНАЧЕНИЕ удаленного элемента
        
  ! del - не рекомендуется использовать на текущем этапе.

    numbers |= {'a': 1, 'b': 2} - обновление словаря numbers другим словарем (существующие ключи заменятся)
    
    dict1 | dict - ' | ' - оператор слияния (направленный) - создается новый объект.

    |= - обновление (либо метод update())
    
    | - слияние
    
01_14 - Когда-то словари были неупорядоченными (до версии 3.6)

01_21
    


        
        
        
        
        
===============================================================================================

Другое полезное 

    списки, словари, множества - изменяемые объекты
    
    