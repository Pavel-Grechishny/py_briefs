===========================================================================

00_00 - РАБОТА С ПУТЯМИ

===========================================================================

00_04 - Пути абсолютные и относительные

    D:\temp\home\2023\2023.08.25.py - абсолютный (от корня D:)
    cd ..\home\2023\2023.08.25.py - относительный путь (от "точки")
    
    В системе путей всегда имется единый корень
    
  # абсолютные пути
  # система posix
    UNIX - / (/mount/python/home/.../1.py) - отдельных букв D: нет
  # система nt
    WINDOWS - (D:\mount\python\home\...\1.py) - D: корень
    
===========================================================================
    
  # Экранирование \
    'D:\\mount\\python\\home\\...\\1.py'
    
  # r-строки (предпочительнее для путей)
    r'D:\mount\python\home\...\1.py' - не нужно экранировать
    
===========================================================================

00_27 - решение проблем с путями (корни и разделители)

  ! Стараться использовать относительные пути
  
    1. Модули стандартной библиотеки - os, sys
    
    os.name - свеления об операционной системе (posix, nt, java)
    
    from os import name
    print(name)
    
    
    >>> from os import name
    >>> if name == 'nt':
    ...     PATH_SPLITTER = '\\'
    ... else:
    ...     PATH_SPLITTER = '/'
    ...
    
    >>> from sys import path
    >>> print(*path, sep='\n')

    C:\Python311\python311.zip - текущий каталог в котором выполняется скрипт
    C:\Python311\DLLs
    C:\Python311\Lib
    C:\Python311
    C:\Python311\Lib\site-packages
    
  ! CWD - текщий рабочий каталог - current working directory
  
    file_name = 'myfile.py'
    file_path = PATH_SPLITTER.join((path[0], file_name))
    
    print(file_path)
  
  ! файл - scripts/path1.py
  
=============================================================================

00_43 - pathlib (scripts/path2)
  
  2 Модуль стандартной библиотеки pathlib - средства для работы с путями
  
    from pathlib import Path
    from sys import path
    
    (Path - не path) - два разных объекта
    
    file_path = Path(path[0]) / 'file.py'
    
==============================================================================

00_59 - извлечение компонетов из file_path = Path(path[0]) - проверки

    file_path.name - имя конечного компонента нашего пути
    file_path.parent - родительский путь к файла
    file_path.parents - все пути к файлу до корня
    file_path.suffix - расширение файла | или '' [пусто]
    file_path.is_dir() - проверка на каталог (обращение к ФС) - True | False
    file_path.is_file() - проверка на файл (обращение к ФС) - True | False
    file_path.exists() - проверка существования пути (обращение к ФС)
    file_path.stem - часть имени файла без расширения
    file_path.drive - диск
    file_path.root - '\\' - не понятно что
    file_path.anchor - корень в любой OC
        
    
    
    