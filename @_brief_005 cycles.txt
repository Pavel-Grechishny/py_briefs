================================================================================

00_04 Категории циклов

    Конечные циклы (исчисляемые) - заранее известно число итераций (песочные часы)
    
    Условные циклы - циклы с незвестным заранее числом итераций (система Земля - Солнце)
    
    В различных языках реализовано несколько видов циклов

================================================================================

00_15 Циклические конструкции Python

    В python реаливано 2 циклические конструкции (while, for)
    
    while - условный цикл
    ожидат объект либо выражение, которое возвращет объект и неявным образом осущ. проверку на истинность
    если истинность объекта == True, то выполняется код в теле цикла, после возвразается к заголовку
    и снова проверяет переданный ему объект
    
    while True:
        print('начало')
      # выполняемый код
        print('конец')

    while a < 10:
        print('начало')
      # выполняемый код
        print('конец')
    
    >>> while a < 10:
    ...     a += 1
    ...     print(a, end=' - ')
    ...
    1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - >>>
    
    while False: цикл не выполняется
    
    кроме проверки заголовка цикла, можем явно указать на выход из цикла
    
00_33 - break - прерывает текущую итерацию и выходит из цикла
    
    while True: - проверка
        print('начало тела') - инструкция выполняется
        break                - явно указываем на выход
        print('конец тела')  - инструкция не выполняется
    print('конец цикла')   

    >>> while True:
    ...     command = input(' > ')
    ...     if command == 'quit':
    ...             break
    ...     print(command*2)
    ...
     > look
    looklook
     > stop
    stopstop
     > quit
    >>>
    
  ! В заголовке прописывается условие входа в тело цикла
  ! В теле прописывается условие выхода из цикла
    

00_50 - continue - текущая итерация прерывается, переходит к следующей итерации (не выходит из цикла)

00_52 У циклических конструкций есть опциональный блок else

    cnt = 10
    
    while cnt > 0:
        cnt -= 1
    else:
        print('цикл завершен корректно') - дойдем до этой строки
        
    
    while cnt > 0:
        cnt -= 1
        if not cnt % 7:
            break
    else:
        print('цикл завершен корректно') - не дойдем до этой строки.
    
  ! корректным считается завершение, которое не было досрочно прервано
    
=======================================================================================

Другое полезное

^C - прервать текущий процесс в крмандной строке

! all, any --- !!!

print(f'{cnt}') - строковое представление
print(f'{cnt=}') - тоже самое, что и print(f'cnt = {cnt}')